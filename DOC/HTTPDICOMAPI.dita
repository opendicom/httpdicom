<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="topic_ajf_zyv_xdb">
    <title>HTTPDICOM API</title>
    <body>
        <p>HTTPDICOM está basado en un grafo vinculando objetos maestros que facilitan:</p>
        <p>
            <ul id="ul_i4m_sfw_xdb">
                <li>el uso de workflows DICOM (qido, wado, mwl, iocm, …)</li>
                <li>el uso de vocabulario controlado (en particular snomed, inclusive códigos post
                    coordinados)</li>
                <li>consultas remotas dentro de redes de nodos federados</li>
                <li>consultas distribuidas y respuestas consolidadas</li>
            </ul>
        </p>
        <p>Por diseño, HTTPDICOM no incluye la gestión de usuarios, ni la capa de presentación
            HTLM5, ni la capa de seguridad HTTPS. HTML5DICOM y NGINX se encargan de eso. No
            obstante, HTTPDICOM facilita el consumo de información desde widget DATATABLES
            encontrado en los formularios de HTML5DICOM gracias a servicios REST especialmente
            diseñados para oficiar de fuente de información paginada en el servidor.</p>
        <section id="section_dxg_lcw_xdb">
            <title>Grafo</title>
            <p>/custodian/pacs/acl </p>
            <p>/pacs/service/workitem (asociado a cero o más code)</p>
            <p>/pacs/procedure/scheme+code</p>
            <p>/scheme/code</p>
            <p>/APath (extended qido backed by sql databases), called by qido,
                datatables, weasis, cornerstone, etc)</p>
            <p>/wado (con OIDs encriptados)</p>
            <p>/wado-rs (backed by wado servers or file system access), called by dcm.zip, encapsulated, etc...</p>
            <p>/deid (servicio de deidentificación)</p>
            <p>/storestow (servicio de formateo de archivos antes de mandarlos a un PACS (receptor DICOM binario de archivos para su acondicionamtiento antes envío a PACS</p>
        </section>
        <p/>
    </body>
</topic>
